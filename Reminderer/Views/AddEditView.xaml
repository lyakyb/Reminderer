<UserControl x:Class="Reminderer.Views.AddEditView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:customControl="clr-namespace:Reminderer.CustomControl"
      xmlns:local="clr-namespace:Reminderer.Views"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="400"
      xmlns:sys="clr-namespace:System;assembly=mscorlib"
      >
    <Grid>
        <Grid.Resources>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Margin" Value="3 0 0 3"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="BorderBrush" Value="SlateGray"/>
                <Setter Property="BorderThickness" Value="0 0 0 1"/>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Margin" Value="5 5 5 5"/>
            </Style>
            <Style TargetType="{x:Type RadioButton}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            
            
            
            
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.93*"/>
            <RowDefinition Height="0.07*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Background="White" Margin="3,3,3,3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.28*" MinWidth="30"/>
                <ColumnDefinition Width="0.84*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.15*"/>
                <RowDefinition Height="0.15*"/>
                <RowDefinition Height="0.25*"/>
                <RowDefinition Height="0.15*"/>
                <RowDefinition Height="0.15*"/>
                <RowDefinition Height="0.15*"/>
            </Grid.RowDefinitions>

           
            <Label Content="Description" Grid.Row="0" Grid.Column="0" />
            <TextBox Grid.Row="0" Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding NewTask.Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <Label Content="Extra Detail" Grid.Row="1" Grid.Column="0"/>
            <TextBox Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch" Text="{Binding NewTask.ExtraDetail, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <Label Content="Time" Grid.Row="2" Grid.Column="0"/>
            <Grid Grid.Row="2" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.25*"/>
                    <RowDefinition Height="0.75*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.5*"/>
                    <ColumnDefinition Width="0.5*"/>
                </Grid.ColumnDefinitions>

                <Grid.Resources>
                    <Style TargetType="RadioButton">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ReminderSelected}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ReminderSelected}" Value="False">
                                <Setter Property="Visibility" Value="Hidden"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Resources>
                <!-- Task Time Choices -->

                <RadioButton Grid.Row="0" Grid.Column="0" Content="From now" VerticalAlignment="Bottom" HorizontalAlignment="Left" IsChecked="{Binding NewTask.FromSavedTime}"/>
                <RadioButton Grid.Row="0" Grid.Column="1" Content="Every interval" VerticalAlignment="Bottom" HorizontalAlignment="Left" IsChecked="{Binding NewTask.IsAtSetInterval}"/>

                <DatePicker Grid.Row="0" Grid.ColumnSpan="6" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5 5 5 5" DisplayDateStart="{x:Static sys:DateTime.Now}" SelectedDate="{Binding NewTask.DesiredDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <DatePicker.Style>
                        <Style TargetType="DatePicker">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ReminderSelected}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ReminderSelected}" Value="False">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DatePicker.Style>
                </DatePicker>
                <customControl:TimePicker Grid.Row="1" Grid.ColumnSpan="6" Margin="5 5 5 5" x:Name="timePicker" HourValue="{Binding DesiredHour, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" MinuteValue="{Binding DesiredMinute, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>

            <Label Content="Remind?" Grid.Row="3" Grid.Column="0"/>
            <Grid Grid.Row="3" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="0.2*"/>
                    <RowDefinition Height="0.4*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.4*"/>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="0.4*"/>
                </Grid.ColumnDefinitions>
                <customControl:ToggleSwitch Grid.Row="1" Grid.Column="1" IsToggled="{Binding Path=NewTask.ShouldRemind, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid> 

            <Label Content="Repeat?" Grid.Row="4" Grid.Column="0"/>
            <Grid Grid.Row="4" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.4*"/>
                    <RowDefinition Height="0.2*"/>
                    <RowDefinition Height="0.4*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.4*"/>
                    <ColumnDefinition Width="0.2*"/>
                    <ColumnDefinition Width="0.4*"/>
                </Grid.ColumnDefinitions>
            <customControl:ToggleSwitch Grid.Row="1" Grid.Column="1" IsToggled="{Binding Path=NewTask.ShouldRepeat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>

            <Label Content="Repeating Days" Grid.Row="5" Grid.Column="0" />
            <customControl:RepeatingDayPicker IsEnabled="{Binding NewTask.ShouldRepeat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Grid.Row="5" Grid.Column="1" SelectedDays="{Binding NewTask.RepeatingDays, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


        </Grid>
        <Button Grid.Row="1" Command="{Binding AddCommand}">
            <Button.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEditing}" Value="True">
                            <Setter Property="Button.Content" Value="Edit"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEditing}" Value="False">
                            <Setter Property="Button.Content" Value="Add"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>

</UserControl>
